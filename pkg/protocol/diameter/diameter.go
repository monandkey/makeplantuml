package diameter

// RFC 3588 7.1. Result-Code AVP
// 3GPP TS 29.272 7.4 Result-Code and Experimental-Result Values
// 3GPP TS 39.336 8.4 Result-Code and Experimental-Result Values
func GetResultCode(id int) string {
	var diameter_result_code = map[int]string{
		1001: "DIAMETER_MULTI_ROUND_AUTH",
		2001: "DIAMETER_SUCCESS",
		3001: "DIAMETER_COMMAND_UNSUPPORTED",
		3002: "DIAMETER_UNABLE_TO_DELIVER",
		3003: "DIAMETER_REALM_NOT_SERVED",
		3004: "DIAMETER_TOO_BUSY",
		3005: "DIAMETER_LOOP_DETECTED",
		3006: "DIAMETER_REDIRECT_INDICATION",
		3007: "DIAMETER_APPLICATION_UNSUPPORTED",
		3008: "DIAMETER_INVALID_HDR_BITS",
		3009: "DIAMETER_INVALID_AVP_BITS",
		3010: "DIAMETER_UNKNOWN_PEER",
		4001: "DIAMETER_AUTHENTICATION_REJECTED",
		4002: "DIAMETER_OUT_OF_SPACE",
		4003: "ELECTION_LOST",
		4181: "DIAMETER_AUTHENTICATION_DATA_UNAVAILABLE", // 3GPP Spec S6a
		4182: "DIAMETER_ERROR_CAMEL_SUBSCRIPTION_PRESENT", // 3GPP Spec S6a
		// 5001: "DIAMETER_AVP_UNSUPPORTED",
		5001: "DIAMETER_ERROR_USER_UNKNOWN", // 3GPP Spec S6a
		5002: "DIAMETER_UNKNOWN_SESSION_ID",
		5003: "DIAMETER_AUTHORIZATION_REJECTED",
		// 5004: "DIAMETER_INVALID_AVP_VALUE",
		5004: "DIAMETER_ERROR_ROAMING_NOT_ALLOWED",  // 3GPP Spec S6a
		5005: "DIAMETER_MISSING_AVP",
		5006: "DIAMETER_RESOURCES_EXCEEDED",
		5007: "DIAMETER_CONTRADICTING_AVPS",
		5008: "DIAMETER_AVP_NOT_ALLOWED",
		5009: "DIAMETER_AVP_OCCURS_TOO_MANY_TIMES",
		5010: "DIAMETER_NO_COMMON_APPLICATION",
		5011: "DIAMETER_UNSUPPORTED_VERSION",
		5012: "DIAMETER_UNABLE_TO_COMPLY",
		5013: "DIAMETER_INVALID_BIT_IN_HEADER",
		5014: "DIAMETER_INVALID_AVP_LENGTH",
		5015: "DIAMETER_INVALID_MESSAGE_LENGTH",
		5016: "DIAMETER_INVALID_AVP_BIT_COMBO",
		5017: "DIAMETER_NO_COMMON_SECURITY",
		5420: "DIAMETER_ERROR_UNKNOWN_EPS_SUBSCRIPTION",
		5421: "DIAMETER_ERROR_RAT_NOT_ALLOWED", // 3GPP Spec S6a
		5422: "DIAMETER_ERROR_EQUIPMENT_UNKNOWN", // 3GPP Spec S6a
		5423: "DIAMETER_ERROR_UNKNOWN_SERVING_NODE", // 3GPP Spec S6a
		5451: "DIAMETER_ERROR_USER_NO_APN_SUBSCRIPTION", // 3GPP Spec S6a
		5510: "DIAMETER_ERROR_UNAUTHORIZED_REQUESTING_ENTITY", // 3GPP Spec S6a
		5511: "DIAMETER_ERROR_UNAUTHORIZED_SERVICE", // 3GPP Spec S6a
		5512: "DIAMETER_ERROR_REQUESTED_RANGE_IS_NOT ALLOWED", // 3GPP Spec S6a
		5513: "DIAMETER_ERROR_CONFIGURATION_EVENT_STORAGE_NOT_ SUCCESSFUL", // 3GPP Spec S6a
		5514: "DIAMETER_ERROR_CONFIGURATION_EVENT_NON_EXISTANT", // 3GPP Spec S6a
		5516: "DIAMETER_ERROR_UNAUTHORIZED_MTC_PROVIDER", // 3GPP Spec S6a
	}

	if _, ok := diameter_result_code[id]; ok {
		return "Cause: " + diameter_result_code[id] + "\\n"
	}
	return ""
}

// RFC 4006 8.3. CC-Request-Type AVP
func GetCCRequestType(id int) string {
	var diameter_cc_request_type = map[int]string{
		1: "INITIAL_REQUEST",
		2: "UPDATE_REQUEST",
		3: "TERMINATION_REQUEST",
	}

	if _, ok := diameter_cc_request_type[id]; ok {
		return "CC-Request-Type: " + diameter_cc_request_type[id] + "\\n"
	}
	return ""
}
